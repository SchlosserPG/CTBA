[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CTBA",
    "section": "",
    "text": "1 Overview",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Deploy a Dash App to Render.com (and Publish HTML via docs/)</span>"
    ]
  },
  {
    "objectID": "index.html#appendix-a-render-a-python-file-to-html-with-quarto",
    "href": "index.html#appendix-a-render-a-python-file-to-html-with-quarto",
    "title": "CTBA",
    "section": "3.1 Appendix A: Render a Python file to HTML with Quarto",
    "text": "3.1 Appendix A: Render a Python file to HTML with Quarto\nQuarto can render a Python script (with outputs) to HTML.\nquarto render your_script.py --to html --output-dir docs",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Deploy a Dash App to Render.com (and Publish HTML via docs/)</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Electricity Prices Dashboard",
    "section": "",
    "text": "2.1 Introduction\nThis dashboard shows U.S. state-level electricity prices using a choropleth map.\nYou can interact with the year slider to see changes over time.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electricity Prices Dashboard</span>"
    ]
  },
  {
    "objectID": "intro.html#introduction",
    "href": "intro.html#introduction",
    "title": "2  Electricity Prices Dashboard",
    "section": "",
    "text": "Note\n\n\n\nTo view the live dashboard inside Quarto, you’ll need to run this as an interactive document\n(quarto preview) rather than a static HTML render.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electricity Prices Dashboard</span>"
    ]
  },
  {
    "objectID": "intro.html#run-the-dash-app",
    "href": "intro.html#run-the-dash-app",
    "title": "2  Electricity Prices Dashboard",
    "section": "2.2 Run the Dash App",
    "text": "2.2 Run the Dash App",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electricity Prices Dashboard</span>"
    ]
  },
  {
    "objectID": "intro.html#live-dash-app-embedded",
    "href": "intro.html#live-dash-app-embedded",
    "title": "2  Electricity Prices Dashboard",
    "section": "2.3 Live Dash App (embedded)",
    "text": "2.3 Live Dash App (embedded)\nThis Quarto document launches the Dash server in the background when you run quarto preview, then embeds it below.\n\n\n\n\n\n\nTip\n\n\n\nRun this document with:\n```bash quarto preview intro.qmd\n\n\n\n# Run the app from the electricity.py file\nimport runpy\nrunpy.run_path(\"electricity.py\")\n\n{'__name__': '&lt;run_path&gt;',\n '__doc__': None,\n '__package__': '',\n '__loader__': None,\n '__spec__': None,\n '__file__': 'electricity.py',\n '__cached__': None,\n '__builtins__': {'__name__': 'builtins',\n  '__doc__': \"Built-in functions, types, exceptions, and other objects.\\n\\nThis module provides direct access to all 'built-in'\\nidentifiers of Python; for example, builtins.len is\\nthe full name for the built-in function len().\\n\\nThis module is not normally accessed explicitly by most\\napplications, but can be useful in modules that provide\\nobjects with the same name as a built-in value, but in\\nwhich the built-in of that name is also needed.\",\n  '__package__': '',\n  '__loader__': _frozen_importlib.BuiltinImporter,\n  '__spec__': ModuleSpec(name='builtins', loader=&lt;class '_frozen_importlib.BuiltinImporter'&gt;, origin='built-in'),\n  '__build_class__': &lt;function __build_class__&gt;,\n  '__import__': &lt;function __import__(name, globals=None, locals=None, fromlist=(), level=0)&gt;,\n  'abs': &lt;function abs(x, /)&gt;,\n  'all': &lt;function all(iterable, /)&gt;,\n  'any': &lt;function any(iterable, /)&gt;,\n  'ascii': &lt;function ascii(obj, /)&gt;,\n  'bin': &lt;function bin(number, /)&gt;,\n  'breakpoint': &lt;function breakpoint&gt;,\n  'callable': &lt;function callable(obj, /)&gt;,\n  'chr': &lt;function chr(i, /)&gt;,\n  'compile': &lt;function compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1, *, _feature_version=-1)&gt;,\n  'delattr': &lt;function delattr(obj, name, /)&gt;,\n  'dir': &lt;function dir&gt;,\n  'divmod': &lt;function divmod(x, y, /)&gt;,\n  'eval': &lt;function eval(source, globals=None, locals=None, /)&gt;,\n  'exec': &lt;function exec(source, globals=None, locals=None, /, *, closure=None)&gt;,\n  'format': &lt;function format(value, format_spec='', /)&gt;,\n  'getattr': &lt;function getattr&gt;,\n  'globals': &lt;function globals()&gt;,\n  'hasattr': &lt;function hasattr(obj, name, /)&gt;,\n  'hash': &lt;function hash(obj, /)&gt;,\n  'hex': &lt;function hex(number, /)&gt;,\n  'id': &lt;function id(obj, /)&gt;,\n  'input': &lt;bound method Kernel.raw_input of &lt;ipykernel.ipkernel.IPythonKernel object at 0x000002B01CBBFCB0&gt;&gt;,\n  'isinstance': &lt;function isinstance(obj, class_or_tuple, /)&gt;,\n  'issubclass': &lt;function issubclass(cls, class_or_tuple, /)&gt;,\n  'iter': &lt;function iter&gt;,\n  'aiter': &lt;function aiter(async_iterable, /)&gt;,\n  'len': &lt;function len(obj, /)&gt;,\n  'locals': &lt;function locals()&gt;,\n  'max': &lt;function max&gt;,\n  'min': &lt;function min&gt;,\n  'next': &lt;function next&gt;,\n  'anext': &lt;function anext&gt;,\n  'oct': &lt;function oct(number, /)&gt;,\n  'ord': &lt;function ord(c, /)&gt;,\n  'pow': &lt;function pow(base, exp, mod=None)&gt;,\n  'print': &lt;function print(*args, sep=' ', end='\\n', file=None, flush=False)&gt;,\n  'repr': &lt;function repr(obj, /)&gt;,\n  'round': &lt;function round(number, ndigits=None)&gt;,\n  'setattr': &lt;function setattr(obj, name, value, /)&gt;,\n  'sorted': &lt;function sorted(iterable, /, *, key=None, reverse=False)&gt;,\n  'sum': &lt;function sum(iterable, /, start=0)&gt;,\n  'vars': &lt;function vars&gt;,\n  'None': None,\n  'Ellipsis': Ellipsis,\n  'NotImplemented': NotImplemented,\n  'False': False,\n  'True': True,\n  'bool': bool,\n  'memoryview': memoryview,\n  'bytearray': bytearray,\n  'bytes': bytes,\n  'classmethod': classmethod,\n  'complex': complex,\n  'dict': dict,\n  'enumerate': enumerate,\n  'filter': filter,\n  'float': float,\n  'frozenset': frozenset,\n  'property': property,\n  'int': int,\n  'list': list,\n  'map': map,\n  'object': object,\n  'range': range,\n  'reversed': reversed,\n  'set': set,\n  'slice': slice,\n  'staticmethod': staticmethod,\n  'str': str,\n  'super': super,\n  'tuple': tuple,\n  'type': type,\n  'zip': zip,\n  '__debug__': True,\n  'BaseException': BaseException,\n  'BaseExceptionGroup': BaseExceptionGroup,\n  'Exception': Exception,\n  'GeneratorExit': GeneratorExit,\n  'KeyboardInterrupt': KeyboardInterrupt,\n  'SystemExit': SystemExit,\n  'ArithmeticError': ArithmeticError,\n  'AssertionError': AssertionError,\n  'AttributeError': AttributeError,\n  'BufferError': BufferError,\n  'EOFError': EOFError,\n  'ImportError': ImportError,\n  'LookupError': LookupError,\n  'MemoryError': MemoryError,\n  'NameError': NameError,\n  'OSError': OSError,\n  'ReferenceError': ReferenceError,\n  'RuntimeError': RuntimeError,\n  'StopAsyncIteration': StopAsyncIteration,\n  'StopIteration': StopIteration,\n  'SyntaxError': SyntaxError,\n  'SystemError': SystemError,\n  'TypeError': TypeError,\n  'ValueError': ValueError,\n  'Warning': Warning,\n  'FloatingPointError': FloatingPointError,\n  'OverflowError': OverflowError,\n  'ZeroDivisionError': ZeroDivisionError,\n  'BytesWarning': BytesWarning,\n  'DeprecationWarning': DeprecationWarning,\n  'EncodingWarning': EncodingWarning,\n  'FutureWarning': FutureWarning,\n  'ImportWarning': ImportWarning,\n  'PendingDeprecationWarning': PendingDeprecationWarning,\n  'ResourceWarning': ResourceWarning,\n  'RuntimeWarning': RuntimeWarning,\n  'SyntaxWarning': SyntaxWarning,\n  'UnicodeWarning': UnicodeWarning,\n  'UserWarning': UserWarning,\n  'BlockingIOError': BlockingIOError,\n  'ChildProcessError': ChildProcessError,\n  'ConnectionError': ConnectionError,\n  'FileExistsError': FileExistsError,\n  'FileNotFoundError': FileNotFoundError,\n  'InterruptedError': InterruptedError,\n  'IsADirectoryError': IsADirectoryError,\n  'NotADirectoryError': NotADirectoryError,\n  'PermissionError': PermissionError,\n  'ProcessLookupError': ProcessLookupError,\n  'TimeoutError': TimeoutError,\n  'IndentationError': IndentationError,\n  'IndexError': IndexError,\n  'KeyError': KeyError,\n  'ModuleNotFoundError': ModuleNotFoundError,\n  'NotImplementedError': NotImplementedError,\n  'RecursionError': RecursionError,\n  'UnboundLocalError': UnboundLocalError,\n  'UnicodeError': UnicodeError,\n  'BrokenPipeError': BrokenPipeError,\n  'ConnectionAbortedError': ConnectionAbortedError,\n  'ConnectionRefusedError': ConnectionRefusedError,\n  'ConnectionResetError': ConnectionResetError,\n  'TabError': TabError,\n  'UnicodeDecodeError': UnicodeDecodeError,\n  'UnicodeEncodeError': UnicodeEncodeError,\n  'UnicodeTranslateError': UnicodeTranslateError,\n  'ExceptionGroup': ExceptionGroup,\n  'EnvironmentError': OSError,\n  'IOError': OSError,\n  'WindowsError': OSError,\n  'open': &lt;function _io.open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)&gt;,\n  'copyright': Copyright (c) 2001-2023 Python Software Foundation.\n  All Rights Reserved.\n  \n  Copyright (c) 2000 BeOpen.com.\n  All Rights Reserved.\n  \n  Copyright (c) 1995-2001 Corporation for National Research Initiatives.\n  All Rights Reserved.\n  \n  Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.\n  All Rights Reserved.,\n  'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands\n      for supporting Python development.  See www.python.org for more information.,\n  'license': MIT License\n  \n  Copyright (c) 2025 SchlosserPG\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.,\n  'help': Type help() for interactive help, or help(object) for help about object.,\n  'execfile': &lt;function _pydev_bundle._pydev_execfile.execfile(file, glob=None, loc=None)&gt;,\n  'runfile': &lt;function _pydev_bundle.pydev_umd.runfile(filename, args=None, wdir=None, namespace=None)&gt;,\n  '__IPYTHON__': True,\n  'display': &lt;function IPython.core.display_functions.display(*objs, include=None, exclude=None, metadata=None, transient=None, display_id=None, raw=False, clear=False, **kwargs)&gt;,\n  'get_ipython': &lt;bound method InteractiveShell.get_ipython of &lt;ipykernel.zmqshell.ZMQInteractiveShell object at 0x000002B01CBE9FD0&gt;&gt;},\n 'dash': &lt;module 'dash' from 'C:\\\\Users\\\\pamel\\\\Documents\\\\BUAD-CTBA\\\\Code\\\\.venv\\\\Lib\\\\site-packages\\\\dash\\\\__init__.py'&gt;,\n 'dcc': &lt;module 'dash.dcc' from 'C:\\\\Users\\\\pamel\\\\Documents\\\\BUAD-CTBA\\\\Code\\\\.venv\\\\Lib\\\\site-packages\\\\dash\\\\dcc\\\\__init__.py'&gt;,\n 'html': &lt;module 'dash.html' from 'C:\\\\Users\\\\pamel\\\\Documents\\\\BUAD-CTBA\\\\Code\\\\.venv\\\\Lib\\\\site-packages\\\\dash\\\\html\\\\__init__.py'&gt;,\n 'Input': dash.dependencies.Input,\n 'Output': dash.dependencies.Output,\n 'pd': &lt;module 'pandas' from 'C:\\\\Users\\\\pamel\\\\Documents\\\\BUAD-CTBA\\\\Code\\\\.venv\\\\Lib\\\\site-packages\\\\pandas\\\\__init__.py'&gt;,\n 'px': &lt;module 'plotly.express' from 'C:\\\\Users\\\\pamel\\\\Documents\\\\BUAD-CTBA\\\\Code\\\\.venv\\\\Lib\\\\site-packages\\\\plotly\\\\express\\\\__init__.py'&gt;,\n 'df':        year  month state      sectorName  customers  price    revenue  \\\n 0      2001      1    WY     all sectors        NaN   4.31   48.12840   \n 1      2001      1    WY      commercial        NaN   5.13   12.67978   \n 2      2001      1    WY      industrial        NaN   3.26   19.60858   \n 3      2001      1    WY           other        NaN   4.75    0.76868   \n 4      2001      1    WY     residential        NaN   6.01   15.07136   \n ...     ...    ...   ...             ...        ...    ...        ...   \n 81710  2024      1    AR     all sectors  1717720.0   9.63  442.98773   \n 81711  2024      1    AR      commercial   208669.0  10.26   97.79467   \n 81712  2024      1    AR      industrial    34951.0   7.08  109.92656   \n 81713  2024      1    AR     residential  1474098.0  11.24  235.26399   \n 81714  2024      1    AR  transportation        2.0  12.70    0.00252   \n \n             sales  \n 0      1116.17208  \n 1       247.08691  \n 2       602.30484  \n 3        16.17442  \n 4       250.60591  \n ...           ...  \n 81710  4598.63147  \n 81711   953.02154  \n 81712  1553.02838  \n 81713  2092.56172  \n 81714     0.01984  \n \n [81715 rows x 8 columns],\n 'app': &lt;dash.dash.Dash at 0x2b042a8db80&gt;,\n 'update_map': &lt;function &lt;run_path&gt;.update_map(selected_year)&gt;}\n\n\n\n2.3.1 How it works\n\nThe runpy.run_path(\"electricity.py\") call will execute the file directly in the Quarto execution environment.\nIf you want to serve the app locally and not block the document rendering, you could instead run the script in the terminal:",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Electricity Prices Dashboard</span>"
    ]
  }
]