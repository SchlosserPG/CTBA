{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"How to Deploy a Dash App to Render.com (and Publish HTML via docs/)\"\n",
        "format:\n",
        "  html:\n",
        "    theme: default\n",
        "    toc: true\n",
        "    toc-depth: 2\n",
        "    smooth-scroll: true\n",
        "page-layout: article\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# Overview\n",
        "\n",
        "-   This guide explains how to:\n",
        "    -   Prepare and run a Dash app locally\n",
        "    -   Deploy it to Render.com using Gunicorn\n",
        "    -   Fix common deployment issues\n",
        "    -   Publish an HTML version of a Python file (or this guide) via GitHub Pages\n",
        "    -   Use a docs/ folder to host HTML with GitHub Pages\n",
        "\n",
        "# Live Example (Embedded Iframe)\n",
        "\n",
        "-   This shows a hosted Dash app inside the HTML output of this page.\n",
        "-   Replace the src URL with your own Render app link if different.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{html}\n",
        "<iframe src=\"https://ctba-oror.onrender.com/\" title=\"Live Dash App on Render\" style=\"width:100%;height:500px;border:2px solid #115740;border-radius:6px;\"></iframe>\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "1)  Prepare Your Dash App\n",
        "\n",
        "-   Ensure your main Python file defines: server = app.server\n",
        "\n",
        "-   The Gunicorn start command on Render must match your filename and server variable exactly\n"
      ],
      "id": "4c0cd7ad"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from dash import Dash, html\n",
        "\n",
        "app = Dash(__name__)\n",
        "server = app.server  # Required for Gunicorn in production\n",
        "\n",
        "wm_green = \"#115740\"\n",
        "\n",
        "app.layout = html.Div([\n",
        "    html.H1(\"Hello from Dash on Render!\", style={\"color\": wm_green, \"textAlign\": \"center\"})\n",
        "])\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    app.run(debug=True)"
      ],
      "id": "a4395e6b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "-   Example mapping:\n",
        "    -   File: LiveDash.py --\\> Start command: gunicorn LiveDash:server\n",
        "    -   File: electricity.py --\\> Start command: gunicorn electricity:server\n",
        "\n",
        "2)  Add Required Files\n",
        "\n",
        "-   Create a requirements.txt listing dependencies (add any others you import).\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{text}\n",
        "dash\n",
        "gunicorn\n",
        "plotly\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "3)  Run Locally\n",
        "\n",
        "-   Create and activate a virtual environment\n",
        "-   Install dependencies\n",
        "-   Test both dev mode and production mode\n",
        "\n",
        "'''bash python -m venv .venv \\# Windows PowerShell: .venv\\Scripts\\Activate.ps1 \\# macOS/Linux: source .venv/bin/activate\n",
        "\n",
        "pip install -r requirements.txt python your_filename.py \\# dev mode gunicorn your_filename:server \\# production test '''\n",
        "\n",
        "4)  Push to GitHub\n",
        "\n",
        "'''bash git init git add . git commit -m \"Initial commit\" git branch -M main git remote add origin https://github.com/USERNAME/REPO.git git push -u origin main '''\n",
        "\n",
        "5)  Deploy on Render.com\n",
        "\n",
        "-   Create a New Web Service on Render and connect your GitHub repo\n",
        "-   Build Command: pip install -r requirements.txt\n",
        "-   Start Command: gunicorn your_filename:server\n",
        "-   Click Deploy and open the provided URL\n",
        "\n",
        "6)  Troubleshooting\n",
        "\n",
        "-   ModuleNotFoundError: Check filename and server variable (your_filename:server)\n",
        "-   Changes not showing: Clear build cache and redeploy\n",
        "-   Missing packages: Confirm all imports are in requirements.txt\n",
        "-   Port errors: Don’t hardcode PORT—Render sets it automatically\n",
        "\n",
        "7)  Publish HTML via docs/ on GitHub Pages\n",
        "\n",
        "-   Render this Quarto file to docs/ for GitHub Pages:\n",
        "\n",
        "'''bash quarto render dash_to_render.qmd --to html --output-dir docs git add docs git commit -m \"Publish HTML\" git push '''\n",
        "\n",
        "# GitHub Pages setup:\n",
        "\n",
        "-   Settings → Pages\n",
        "-   Source: Deploy from a branch\n",
        "-   Branch: main\n",
        "-   Folder: /docs\n",
        "-   Save\n",
        "\n",
        "# Your site will be available at:\n",
        "\n",
        "-   https://YOUR-USERNAME.github.io/YOUR-REPO/\n",
        "\n",
        "# Appendix A: Render a Python file to HTML with Quarto\n",
        "\n",
        "# Quarto can render a Python script (with outputs) to HTML.\n",
        "\n",
        "'''bash quarto render your_script.py --to html --output-dir docs '''"
      ],
      "id": "e459a5bc"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}