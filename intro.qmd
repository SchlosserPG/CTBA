---
title: "Electricity Prices Dashboard"
format: html
jupyter: python3
---

## Introduction

This dashboard shows **U.S. state-level electricity prices** using a choropleth map.\
You can interact with the year slider to see changes over time.

::: callout-note
To view the live dashboard inside Quarto, you'll need to run this as an interactive document\
(`quarto preview`) rather than a static HTML render.
:::

## Run the Dash App

## Live Dash App (embedded)

This Quarto document **launches the Dash server in the background** when you run `quarto preview`, then embeds it below.

::: callout-tip
Run this document with:

\`\`\`bash quarto preview intro.qmd
:::

```{python, echo=FALSE, eval=FALSE, output=asis}

# Run the app from the electricity.py file
import runpy
runpy.run_path("electricity.py")

```

### How it works

-   The `runpy.run_path("electricity.py")` call will execute the file directly in the Quarto execution environment.
-   If you want to **serve the app locally** and not block the document rendering, you could instead run the script in the terminal:

```{python}

#| echo: false
#| message: false
#| warning: false
#| output: asis

import socket, threading, time

PORT = 8050

def _port_in_use(port):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        return s.connect_ex(("127.0.0.1", port)) == 0

# Start the Dash app if it's not already running
if not _port_in_use(PORT):
    from electricity import app as dash_app

    def _run():
        # Run Dash in a background thread so Quarto preview keeps working
        # Use app.run (modern) rather than run_server
        dash_app.run(host="127.0.0.1", port=PORT, debug=False, use_reloader=False)

    t = threading.Thread(target=_run, daemon=True)
    t.start()
    # Give the server a moment to come up
    time.sleep(1.5)
# Emit the iframe HTML directly into the document

iframe = f'''
<iframe 
  src="http://127.0.0.1:{PORT}" 
  width="100%" 
  height="800" 
  style="border:2px solid #B9975B; border-radius:8px; background-color:#E8F0E6;">
</iframe>
'''

print(iframe)

```